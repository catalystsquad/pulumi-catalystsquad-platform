// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class ClusterBootstrap extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'catalystsquad-platform:index:ClusterBootstrap';

    /**
     * Returns true if the given object is an instance of ClusterBootstrap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterBootstrap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterBootstrap.__pulumiType;
    }


    /**
     * Create a ClusterBootstrap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterBootstrapArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["argocdHelmConfig"] = args ? args.argocdHelmConfig : undefined;
            resourceInputs["kubePrometheusStackHelmConfig"] = args ? args.kubePrometheusStackHelmConfig : undefined;
            resourceInputs["platformApplicationConfig"] = args ? args.platformApplicationConfig : undefined;
            resourceInputs["prometheusRemoteWriteConfig"] = args ? args.prometheusRemoteWriteConfig : undefined;
        } else {
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterBootstrap.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a ClusterBootstrap resource.
 */
export interface ClusterBootstrapArgs {
    /**
     * Optional, configures the argocd helm release.
     */
    argocdHelmConfig?: pulumi.Input<inputs.HelmReleaseConfigArgs>;
    /**
     * Optional, configures the kube-prometheus-stack helm release.
     */
    kubePrometheusStackHelmConfig?: pulumi.Input<inputs.HelmReleaseConfigArgs>;
    /**
     * Optional, configures the platform application release. Does not deploy if not specified.
     */
    platformApplicationConfig?: pulumi.Input<inputs.PlatformApplicationConfigArgs>;
    /**
     * Optional, configuration for a prometheus remoteWrite secret. Does not deploy if not specified.
     */
    prometheusRemoteWriteConfig?: pulumi.Input<inputs.PrometheusRemoteWriteConfigArgs>;
}
