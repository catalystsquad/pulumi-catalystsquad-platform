// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CatalystsquadPlatform
{
    [CatalystsquadPlatformResourceType("catalystsquad-platform:index:Vpc")]
    public partial class Vpc : Pulumi.ComponentResource
    {
        /// <summary>
        /// Static IPs for all NAT gateways
        /// </summary>
        [Output("natGatewayIPs")]
        public Output<ImmutableArray<string>> NatGatewayIPs { get; private set; } = null!;

        /// <summary>
        /// IDs for all private subnets
        /// </summary>
        [Output("privateSubnetIDs")]
        public Output<ImmutableArray<string>> PrivateSubnetIDs { get; private set; } = null!;

        /// <summary>
        /// IDs for all public subnets
        /// </summary>
        [Output("publicSubnetIDs")]
        public Output<ImmutableArray<string>> PublicSubnetIDs { get; private set; } = null!;

        /// <summary>
        /// CIDR for the VPC
        /// </summary>
        [Output("vpcID")]
        public Output<string> VpcID { get; private set; } = null!;


        /// <summary>
        /// Create a Vpc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vpc(string name, VpcArgs? args = null, ComponentResourceOptions? options = null)
            : base("catalystsquad-platform:index:Vpc", name, args ?? new VpcArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/catalystsquad/pulumi-catalystsquad-platform/releases/download/v${VERSION}",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class VpcArgs : Pulumi.ResourceArgs
    {
        [Input("availabilityZoneConfig")]
        private InputList<Inputs.AvailabilityZoneArgs>? _availabilityZoneConfig;

        /// <summary>
        /// Optional, list of AvailabilityZones to create subnets in. Default: []
        /// </summary>
        public InputList<Inputs.AvailabilityZoneArgs> AvailabilityZoneConfig
        {
            get => _availabilityZoneConfig ?? (_availabilityZoneConfig = new InputList<Inputs.AvailabilityZoneArgs>());
            set => _availabilityZoneConfig = value;
        }

        /// <summary>
        /// Optional, CIDR block of the VPC. Default: 10.0.0.0/16
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// Optional, whether to enable required EKS cluster tags to subnets. Default: true
        /// </summary>
        [Input("enableEksClusterTags")]
        public Input<bool>? EnableEksClusterTags { get; set; }

        /// <summary>
        /// Optional, Name tag value for VPC resource. Default: &lt;stack name&gt;
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Optional, tags to add to all resources. Default: {}
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VpcArgs()
        {
        }
    }
}
